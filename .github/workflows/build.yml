name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up .NET
        uses: actions/setup-dotnet@v1

      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v2
        with:
          path: .sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          Write-Output "Installing SonarQube Scanner..."
          New-Item -Path .sonar/scanner -ItemType Directory -Force
          dotnet tool install --global dotnet-sonarscanner
          Write-Output "SonarQube Scanner installed."

      - name: Begin SonarQube analysis
        shell: powershell
        run: |
          Write-Output "Starting SonarQube analysis..."
          dotnet sonarscanner begin /k:"BookMyShowWebApplicationApi" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.verbose=true
          Write-Output "SonarQube analysis started."

      - name: Build project
        shell: powershell
        run: |
          Write-Output "Building the project..."
          dotnet build
          Write-Output "Project built."

      - name: End SonarQube analysis
        shell: powershell
        run: |
          Write-Output "Ending SonarQube analysis..."
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          Write-Output "SonarQube analysis ended."
