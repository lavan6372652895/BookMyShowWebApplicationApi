name: Build and Analyze

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure full history is fetched for relevant analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v2
        with:
          path: .sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p .sonar/scanner
          curl -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-windows.zip -o sonar-scanner.zip
          Expand-Archive sonar-scanner.zip -DestinationPath .sonar/scanner
          rm sonar-scanner.zip

      - name: Build and analyze with SonarQube
        run: |
          .sonar/scanner/sonar-scanner-4.6.2.2472-windows/bin/sonar-scanner.bat \
            -Dsonar.projectKey=lavan6372652895_BookMyShowWebApplicationApi_6e437175-a84c-432e-8364-c39568f4df5e \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

          dotnet build

          .sonar/scanner/sonar-scanner-4.6.2.2472-windows/bin/sonar-scanner.bat \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
